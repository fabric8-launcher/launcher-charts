kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "launcher.fullname" . }}
  labels:
    {{- include "launcher.labels" . | nindent 4 }}
  annotations:
    configmap.fabric8.io/update-on-change: launcher,launcher-clusters
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "launcher.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "launcher.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: LAUNCHER_BOOSTER_CATALOG_REPOSITORY
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.catalog.git.repository
        - name: LAUNCHER_BOOSTER_CATALOG_REF
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.catalog.git.ref
        - name: LAUNCHER_BOOSTER_CATALOG_FILTER
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.catalog.filter
              optional: true
        - name: LAUNCHER_BACKEND_CATALOG_REINDEX_TOKEN
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.catalog.reindex.token
              optional: true
        - name: LAUNCHER_BACKEND_DOCUMENTATION_RELOAD_TOKEN
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.documentation.reload.token
              optional: true
        - name: LAUNCHER_GIT_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.git.provider
              optional: true
        - name: LAUNCHER_BACKEND_GIT_REPOSITORY_DESCRIPTION
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.git.repository.description
              optional: true
        - name: LAUNCHER_PREFETCH_BOOSTERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.catalog.prefetch
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_API_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.api.url
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.console.url
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.username
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.password
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.token
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_IMPERSONATE_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.impersonate.user
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.github.token
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITHLAB_PRIVATE_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.gitlab.token
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITHLAB_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.gitlab.url
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_BITBUCKET_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.bitbucket.username
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_BITBUCKET_APPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.bitbucket.password
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITEA_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.gitea.username
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITEA_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.bitbucket.password
              optional: true
        - name: LAUNCHER_MISSIONCONTROL_GITEA_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.gitea.url
              optional: true
        - name: SENTRY_DSN
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.sentry.dsn
              optional: true
        - name: LAUNCHER_KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.keycloak.url
        - name: LAUNCHER_KEYCLOAK_REALM
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.keycloak.realm
        - name: LAUNCHER_KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.keycloak.client.id
              optional: true
        - name: LAUNCHER_TRACKER_SEGMENT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.tracker.segment.token
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE
          value: /etc/fabric8-launcher/openshift-clusters.yaml
        - name: LAUNCHER_GIT_PROVIDERS_FILE
          value: /etc/fabric8-launcher/git-providers.yaml
        - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CLUSTERS_SUBSCRIPTION_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.missioncontrol.openshift.clusters.subscription.token
              optional: true
        - name: LAUNCHER_FILTER_RUNTIME
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.filter.runtime
              optional: true
        - name: LAUNCHER_FILTER_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.filter.version
              optional: true
        - name: LAUNCHER_BACKEND_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.url
              optional: true
        - name: LAUNCHER_CREATOR_ENABLED
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.creator.enabled
              optional: true
        - name: LAUNCHER_CREATOR_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.creator.url
              optional: true
        - name: LAUNCHER_OAUTH_OPENSHIFT_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.oauth.openshift.url
              optional: true
        - name: LAUNCHER_OAUTH_OPENSHIFT_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.oauth.openshift.clientId
              optional: true
        - name: LAUNCHER_FRONTEND_SENTRY_DSN
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.frontend.sentry.dsn
              optional: true
        - name: LAUNCHER_TARGETENVIRONMENT_SKIP
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.frontend.targetenvironment.skip
              optional: true
        - name: WELCOME_IMAGE_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.welcome.image.name
              optional: true
        - name: WELCOME_IMAGE_TAG
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.welcome.image.tag
              optional: true
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: {{ include "launcher.fullname" . }}
              key: launcher.backend.java.opts
              optional: true
        image: "{{ .Values.application.image.name }}:{{ .Values.application.image.tag }}"
        imagePullPolicy: Always
        name: {{ include "launcher.fullname" . }}
        ports:
        - containerPort: 8080
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /etc/fabric8-launcher/
          name: configmap-volume
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 10
        {{- with .Values.application.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: configmap-volume
        configMap:
          name: {{ include "launcher.fullname" . }}-clusters
