# Default values for the Launcher.

nameOverride: ""
fullnameOverride: ""

# The authentication mechanism to use: keycloak, oauth or direct
# This does not have a default value because each authentication mechanism needs its specific configuration
# that we cannot determine in advance. You will need to set this value AND any other required settings below.
auth: ""

# The Git provider to be used by Launcher.
# Should be GITHUB (default), GITLAB, BITBUCKET or GITEA
gitProvider: GITHUB

# Settings for the application runtime (what to run and how to run it)
application:
  # The hostname to use for the Route. Leave empty to have it generated
  hostName: ""

  # The Launcher image to use for the application
  image:
    name: fabric8/launcher-backend
    tag: latest
  # Resource limits
  # It's usually recommended not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minishift. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}
  #    requests:
  #      cpu: 10m
  #      memory: 768Mi
  #    limits:
  #      cpu: 1000m
  #      memory: 2G

# Settings for the Launcher Web UI
frontend:
  sentryDsn: ""
  targetEnvironmentSkip: ""

# Settings for the backend which provides Catalog information to the frontend and generates code
backend:
  # The url the backend API is available at
  url: /launch/api
  # Where to find the catalog of example applications
  catalog:
    git:
      # The GitHub repository containing the booster catalog
      repository: https://github.com/fabric8-launcher/launcher-booster-catalog.git
      # The Git reference to use for the above repository
      ref: latest
    # Determines if the entire catalog gets fetched at startup or not
    prefetch: true
    # Filter to use for determining which example applications to index
    # See https://github.com/fabric8-launcher/launcher-application#filtering-the-booster-catalog
    filter: ""
    # Token needed to request catalog re-index
    # See https://github.com/fabric8-launcher/launcher-application#reindex-the-booster-catalog:
    reindexToken: ""
  # The description to be used by Launcher for the Git repositories it creates. When left empty it
  # defaults to "Generated by the Red Hat Developer Launch (https://developers.redhat.com/launch))"
  gitRepositoryDescription: ""
  documentationReloadToken: ""
  sentryDsn: ""
# Settings for the Creator, a free-form code-generator
creator:
  enabled: "true"
  url: /launch/creator
  sentryDsn: ""

# Settings for the Welcome application used by the Creator
welcome:
  # The image to use for the Welcome app
  image:
    name: fabric8/launcher-creator-welcome-app
    tag: latest

openshift:
  # The base URL of the OpenShift API where the launched boosters should be created (ie. https://hostname[:port]
  # or https://ipaddress[:port]). Leave the default value when targeting the same OpenShift/Minishift you are
  # running this on. Required.
  apiUrl: https://openshift.default.svc.cluster.local
  # The base URL of the OpenShift Console where the launched boosters should be created (ie. https://hostname[:port]
  # or https://ipaddress[:port]). When targetting the same OpenShift/Minishift instance you are running this on you
  # can most likely look at this page's address bar of your browser and copy the URL. Optional.
  consoleUrl: ""
  # Impersonate OpenShift users (requires the Launcher to run with a ServiceAccount with impersonator role).
  impersonateUser: false
  # The token needed to determine what clusters the user is subscribed too
  clusterSubscriptionToken: ""

  # Configure this section when .auth==direct
  # OpenShift user. Set when using basic authentication. Optional.
  username: ""
  # OpenShift password. Set when using basic authentication. Optional.
  password: ""
  # OpenShift token. Set when using token authentication. Optional.
  token: ""

# Configure this section when .auth==keycloak
# Settings for KeyCloak authentication. Set its values when using KeyCloak authentication. This will then be used for
# both OpenShift and the selected Git provider.
keycloak:
  # The URL (with the /auth part) of a Keycloak installation to perform SSO authentication against.
  url: ""
  # The keycloak realm to be used.
  realm: ""
  # The keycloak client id to be used in the frontend.
  clientId: ""
  # Defines the list of available OpenShift clusters. It's a list of:
  # - id: some-cluster-id
  #   name: "Human readable name of the cluster"
  #   apiUrl: https://api.starter-us-east-1.openshift.com
  #   consoleUrl: https://console.starter-us-east-1.openshift.com
  #   type: "starter" or "pro"
  clusters: []

# Configure this section when .auth==oauth
# Settings for OAuth authentication. Set its values when using OAuth authentication. This will then be used for
# both OpenShift and the selected Git provider. Leave all settings empty if you don't want to use OAuth. Either
# set all values or none.
oauth:
  # The OpenShift Oauth Url to use for cluster authentication.
  openshiftUrl: ""
  # The URL to redirect back to after authentication
  redirectUrl: "http://dummy"
  # The OpenShift OAuth client id to use for cluster authentication.
  clientId: "launcher"

# Token used for Google Analytics in the frontend. Leaving it empty disables tracking. Optional.
trackerToken: ""

# This can be used to filter the application Runtimes that will be made available to the user
filter:
  # A regular expression that will be used to match against the id field of each runtime. You can prepend `!` in the
  # expression to negate. Leaving it empty means no filtering is performed. Optional.
  runtime: ""

  # A regular expression that will be used to match against the id field of each version. You can prepend `!` in the
  # expression to negate.. Leaving it empty means no filtering is performed. Optional.
  version: ""

# Configure the relevant client and server properties when .auth==oauth
# The configuration to use for each of the Git providers
gitProviders:
  GitHub:
    name: "GitHub"
    type: GITHUB
    apiUrl: https://api.github.com
    repositoryUrl: https://github.com
    clientProperties:
      oauthUrl: https://github.com/login/oauth/authorize
      clientId: dummy
    serverProperties:
      oauthUrl: https://github.com/login/oauth/access_token
      clientSecret: dummy
  GitLab:
    name: "GitLab"
    type: GITLAB
    apiUrl: https://gitlab.com
    repositoryUrl: https://gitlab.com
    clientProperties:
      oauthUrl: https://gitlab.com/oauth/authorize
      clientId: dummy
      redirectUri: http://frontend-location/fixed
    serverProperties:
      oauthUrl: https://gitlab.com/oauth/token
      clientSecret: dummy
  BitBucket:
    name: "BitBucket"
    type: BITBUCKET
    apiUrl: https://api.bitbucket.org
    repositoryUrl: https://bitbucket.org
  Gitea:
    name: "Gitea"
    type: GITEA
    apiUrl: https://try.gitea.io
    repositoryUrl: https://try.gitea.io
    clientProperties:
      oauthUrl: http://[YOUR-GITEA-URL]/login/oauth/authorize
      clientId: dummy
      redirectUri: http://frontend-location/fixed
    serverProperties:
      adminUser: admin
      oauthUrl: https://[YOUR-GITEA-URL]/login/oauth/access_token
      clientSecret: dummy

# Configure this section when .auth==direct
# The section below is really only useful for development purposes as it ties the Launcher to the account of a
# single person. This will only be used if neither KeyCloak nor OAuth is configured. If so the relevant section
# below is used depending on the value of .gitProvider.
legacyGitProvider:
  # Static GitHub connection settings.
  # For local development only when .gitProvider==GITHUB and not using KeyCloak or OAuth
  github:
    # Your GitHub personal access token. See https://github.com/settings/tokens
    # Set when using token authentication. Optional.
    token: ""

  # Static GitLab connection settings.
  # For local development only when .gitProvider==GITLAB and not using KeyCloak or OAuth
  gitlab:
    # Which GitLab server to connect to
    url: https://gitlab.com
    # Your GitLab personal access token. See https://gitlab.com/profile/personal_access_tokens
    token: ""

  # Static BitBucket connection settings.
  # For local development only when .gitProvider==BITBUCKET and not using KeyCloak or OAuth
  bitbucket:
    username: ""
    password: ""

  # Static Gitea connection settings. See https://github.com/fabric8-launcher/launcher-application#gitea
  # For local development only when .gitProvider==GITEA and not using KeyCloak or OAuth
  gitea:
    # Which Gitea server to connect to.
    url: ""
    # Gitea admin user name.
    username: ""
    # Your Gitea personal access token
    token: ""

